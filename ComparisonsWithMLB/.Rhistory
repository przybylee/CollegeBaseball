}
plot(AL.d$Start.YR, AL.d$diff.2018, xlab = "year", ylab = "Change in OPS from 2018", main = "Average Talent in the AL")
abline(v= 1944)
abline(v = 1961)
abline(v = 1969)
abline(v = 1977)
abline(v = 1973)
min.pa <- 100
AL.d <- data.frame(matrix(data = NA, nrow = 2017-1901, ncol = 5))
names(AL.d) <- c("Start.YR", "est", "std.dev", "lower", "upper")
m = 1
for(yr in 1901:2017){
d1 <- hitters[yr == hitters$yearID & hitters$lgID == lg, 1:22]
d2 <- hitters[yr+1 == hitters$yearID & hitters$lgID == lg, 1:22 ]
h1 <- ddply(d1, .(playerID), collapse.season)
h2 <- ddply(d2, .(playerID), collapse.season)
h1 <- h1[h1$AB >= min.pa ,c(1:5,18:21)]
h2 <- h2[h2$AB >= min.pa ,c(1:5,18:21)]
h <- rbind(h1, h2)
h$YR <- as.factor(h$YR)
model1 <- lm(OPS ~ playerID + YR, data= h)
#summary(model1)
#anova(model1)
#yhat <- predict(model1)
#yhat1 <- yhat[h$YR == yr]
#yhat2 <- yhat[h$YR == yr+1]
#lambda <- unlist(coef(model1)[length(coef(model1))])
#This is the test statistic for the difference between seasons
#mean(yhat1)-mean(yhat2)+lambda
X <- model.matrix(model1)
r <- ncol(X)
c1 <- ifelse(h$YR == yr, 1,0)
c1 <- c1/sum(c1)
c2 <- ifelse(h$YR != yr, 1,0)
c2 <- c2/sum(c2)
en <- rep(0,length(coef(model1)))
en[r]<- 1
c <- -t(c1-c2)%*%X-t(en)
#Alternative way to get the test stat:
c%*%coef(model1)
#Do a t.test
#t.test.lm(model1,c)
d <- conf_int.lm(model1, c, a = 0.05)
AL.d[m,]<- cbind(yr,d)
m = m+1
print(paste(yr, "done"))
}
#Do the same for the AL
n <- length(AL.d$Start.YR)
AL.d$diff.2018 <- NA
for(j in 1:n){
AL.d$diff.2018[j] <- -sum(AL.d$est[j:n])
}
plot(AL.d$Start.YR, AL.d$diff.2018, xlab = "year", ylab = "Change in OPS from 2018", main = "Average Talent in the AL")
abline(v= 1944)
abline(v = 1961)
abline(v = 1969)
abline(v = 1977)
abline(v = 1973)
#Here we try to recreate the dick cramer results for comparing talent accross consecutive years of major league baseball
library(Lahman)
library(lme4)
library(vistime)
library(plyr)
library(MASS)
data()
#college <- CollegePlaying
hitters <- Batting
Leagues <- as.character(unique(hitters$lgID))
Start <- rep(NA, length(Leagues))
collapse.season <- function(d){
G <- sum(d$G); AB <- AB <- sum(d$AB); R <- sum(d$R)
H<- sum(d$H); X2B <- sum(d$X2B); X3B <- sum(d$X3B)
HR <- sum (d$HR) ; RBI <- sum(d$RBI); SB <- sum(d$SB, na.rm = T)
CS <- sum (d$CS, na.rm = T); BB <- sum(d$BB, na.rm = T) ; SH <- sum(d$SH, na.rm = T)
SF <- sum(d$SF, na.rm = T); HBP <- sum(d$HBP, na.rm = T)
SLG <- (H-X2B-X3B-HR+2*X2B+3*X3B+4*HR)/AB
OBP <- (H+BB+HBP)/(AB+BB+HBP+SF)
OPS <- SLG+OBP; YR <- d$yearID[1]
TM <- d$teamID[which.max(d$AB)]
LG <- d$lgID[which.max(d$AB)]
data.frame(YR = YR, LG = LG, TM = TM,G =G, AB = AB, R = R, H=H, X2B= X2B, X3B = X3B,
HR= HR, RBI = RBI, SB=SB, CS=CS, BB=BB, HBP = HBP,
SH=SH, SF=SF, SLG=SLG, OBP=OBP, OPS=OPS)
}
#confidence interval for lm
conf_int.lm=function(lmout,c,d=0,a){
b=coef(lmout)
var.b <- vcov(lmout)
X=model.matrix(lmout)
df= nrow(X) - length(b)
cb.d=c%*%b-d
X.X <- t(X)%*%X
tquant <- qt(1-a/2,df)
std.dev = sqrt(c%*%var.b%*%t(c))
lower = cb.d - tquant%*%sqrt(c%*%var.b%*%t(c))
upper = cb.d + tquant%*%sqrt(c%*%var.b%*%t(c))
data.frame(est = cb.d, std.dev = std.dev, lower = lower, upper = upper)
}
#Pick a year and league
yr = 1976
lg = "AL"
min.pa <- 20
d1 <- hitters[yr == hitters$yearID & hitters$lgID == lg, 1:22]
d2 <- hitters[yr+1 == hitters$yearID & hitters$lgID == lg, 1:22 ]
h1 <- ddply(d1, .(playerID), collapse.season)
h2 <- ddply(d2, .(playerID), collapse.season)
h1 <- h1[h1$AB >= min.pa ,c(1:5,18:21)]
h2 <- h2[h2$AB >= min.pa ,c(1:5,18:21)]
h <- rbind(h1, h2)
h$YR <- as.factor(h$YR)
model1 <- lmer(OPS ~ (playerID|1) + (YR|1), data= h)
model1 <- lmer(OPS ~ 1 + (playerID|1) + (YR|1), data= h)
h <- rbind(h1, h2)
h$YR <- as.factor(h$YR)
summary(h)
h$playerID <- as.factor(h$playerID)
model1 <- lmer(OPS ~ 1 + (playerID|1) + (YR|1), data= h)
View(h)
View(h)
model1 <- lmer(OPS ~ 1 + (playerID|1), data= h)
summary(h)
model1 <- lmer(OPS ~ 1 + (playerID|1), data= h)
View(h1)
model1 <- lmer(OPS ~ LG, data= h)
model1 <- lmer(OPS ~ (1|YR) + (1|playerID), data= h)
#summary(model1)
#anova(model1)
yhat <- predict(model1)
yhat1 <- yhat[h$YR == yr]
yhat2 <- yhat[h$YR == yr+1]
summary(model1)
#anova(model1)
fixef(model1)
#anova(model1)
ranef(model1)
#anova(model1)
ranef$YR(model1)
#anova(model1)
ranef(model1)
summary(model1)
#anova(model1)
ranef(model1)
#anova(model1)
ranef(model1)$YR
yhat1 <- yhat[h$YR == yr]-ranef(model1$YR)[1]
yhat2 <- yhat[h$YR == yr+1]-ranef(model1$YR)[2]
yhat1 <- yhat[h$YR == yr]-ranef(model1)$YR[1]
yhat2 <- yhat[h$YR == yr+1]-ranef(model1)$YR[2]
ranef(model1)$YR[2]
ranef(model1)$YR[1]
ranef(model1)$YR[1,1]
ranef(model1)$YR[2,1]
yhat1 <- yhat[h$YR == yr]-ranef(model1)$YR[1,1]
yhat2 <- yhat[h$YR == yr+1]-ranef(model1)$YR[2,1]
#This is the test statistic for the difference between seasons
mean(yhat1)-mean(yhat2)+lambda
#This is the test statistic for the difference between seasons
mean(yhat1)-mean(yhat2)
#This is the test statistic for the difference between seasons
mean(yhat2)-mean(yhat1)
AL.d[m,est]<- est.change
AL.d <- data.frame(matrix(data = NA, nrow = 2017-1901, ncol = 5))
names(AL.d) <- c("Start.YR", "est", "std.dev", "lower", "upper")
m = 1
for(yr in 1901:2017){
d1 <- hitters[yr == hitters$yearID & hitters$lgID == lg, 1:22]
d2 <- hitters[yr+1 == hitters$yearID & hitters$lgID == lg, 1:22 ]
h1 <- ddply(d1, .(playerID), collapse.season)
h2 <- ddply(d2, .(playerID), collapse.season)
h1 <- h1[h1$AB >= min.pa ,c(1:5,18:21)]
h2 <- h2[h2$AB >= min.pa ,c(1:5,18:21)]
h <- rbind(h1, h2)
h$YR <- as.factor(h$YR)
h$playerID <- as.factor(h$playerID)
model1 <- lmer(OPS ~ (1|YR) + (1|playerID), data= h)
summary(model1)
#anova(model1)
ranef(model1)$YR
yhat <- predict(model1)
yhat1 <- yhat[h$YR == yr]-ranef(model1)$YR[1,1]
yhat2 <- yhat[h$YR == yr+1]-ranef(model1)$YR[2,1]
#This is the test statistic for the difference between seasons
est.change <- mean(yhat2)-mean(yhat1)
AL.d[m,"est"]<- est.change
m = m+1
print(paste(yr, "done"))
}
summary(AL.d)
#Do the same for the AL
n <- length(AL.d$Start.YR)
AL.d$diff.2018 <- NA
for(j in 1:n){
AL.d$diff.2018[j] <- -sum(AL.d$est[j:n])
}
plot(AL.d$Start.YR, AL.d$diff.2018, xlab = "year", ylab = "Change in OPS from 2018", main = "Average Talent in the AL")
summary(AL.d)
plot(AL.d$Start.YR, AL.d$diff.2018, xlab = "year", ylab = "Change in OPS from 2018", main = "Average Talent in the AL")
View(AL.d)
AL.d$Start.YR <- 1901:2018
AL.d$Start.YR <- 1901:2017
#Do the same for the AL
n <- length(AL.d$Start.YR)
AL.d$diff.2018 <- NA
for(j in 1:n){
AL.d$diff.2018[j] <- -sum(AL.d$est[j:n])
}
plot(AL.d$Start.YR, AL.d$diff.2018, xlab = "year", ylab = "Change in OPS from 2018", main = "Average Talent in the AL")
abline(v= 1944)
abline(v = 1961)
abline(v = 1969)
abline(v = 1977)
abline(v = 1973)
load("C:/Users/Lee/Box/Iowa State/Baseball/CSL Project 2019/DI_LeagueComparisons/ComparisonsWithMLB/PlyrEffRegWorkspace.RData")
#confidence interval for lm
conf_int.lm_sp=function(lmout,c,d=0,a){
c.sp <- Matrix(c, sparse = T)
b=Matrix(coef(lmout), sparse = T)
var.b <- Matrix(vcov(lmout), sparse = T)
X=Matrix(model.matrix(lmout), sparse = T)
df= nrow(X) - length(b)
cb.d=c%*%b-d
X.X <- t(X)%*%X
tquant <- qt(1-a/2,df)
std.dev = sqrt(c%*%var.b%*%t(c))
lower = cb.d - tquant%*%sqrt(c%*%var.b%*%t(c))
upper = cb.d + tquant%*%sqrt(c%*%var.b%*%t(c))
data.frame(est = cb.d, std.dev = std.dev, lower = lower, upper = upper)
}
par.names <- names(coef(plyr.reg))
lg1 <- "AL.1971"
d.lg1 <- hit[hit$lg.yr == lg1,]
roster1 <- unique(d.lg1$Plyr)
peffs1 <- paste("Plyr", roster1, sep = "")
c.ros1 <- ifelse(par.names %in% peffs1, 1, 0)
c.ros1 <- c.ros1/sum(c.ros1)
#Experiment with original conf_int function
t0 <- Sys.time()
d1 <- conf_int.lm(plyr.reg, c.lg1, a = 0.05)
tf<- Sys.time()
tf-t0
c.lg1 <- ifelse(par.names ==  paste("lg.yr", lg1, sep = ""), 1, 0)
t0 <- Sys.time()
d1 <- conf_int.lm(plyr.reg, c.lg1, a = 0.05)
tf<- Sys.time()
tf-t0
View(conf_int.lm)
length(beta)
beta = coef(plyr.reg)
length(beta)
length(par.names)
Sig = vcov(plyr.reg)
ncol(Sig)
nrow(Sig)
length(c.lg1)
ncol(c.lg1%*% Sig)
nrow(c.lg1%*%Sig)
sd = c.lg1%*% Sig %*% t(c.lg1)
ncol(t(c.lg1))
ncol(c.lg1)
ncol(as.matrix(c.lg1))
beta = as.matix(coef(plyr.reg))
beta = as.matix(drop(coef(plyr.reg)))
as.matrix(c.lg1)
as.matrix(beta)
as.matrix(coef(plyr.reg))
ncol(as.matrix(c.lg1))
#confidence interval for lm
conf_int.lm=function(lmout,c,d=0,a){
b=as.matrix(coef(lmout))
c = as.matrix(c)
var.b <- vcov(lmout)
X=model.matrix(lmout)
df= nrow(X) - length(b)
cb.d=t(c)%*%b-d
X.X <- t(X)%*%X
tquant <- qt(1-a/2,df)
std.dev = sqrt(t(c)%*%var.b%*%c)
lower = cb.d - tquant%*%sqrt(t(c)%*%var.b%*%c)
upper = cb.d + tquant%*%sqrt(t(c)%*%var.b%*%c)
data.frame(est = cb.d, std.dev = std.dev, lower = lower, upper = upper)
}
par.names <- names(coef(plyr.reg))
lg1 <- "AL.1971"
d.lg1 <- hit[hit$lg.yr == lg1,]
roster1 <- unique(d.lg1$Plyr)
peffs1 <- paste("Plyr", roster1, sep = "")
c.ros1 <- ifelse(par.names %in% peffs1, 1, 0)
c.ros1 <- c.ros1/sum(c.ros1)
c.lg1 <- ifelse(par.names ==  paste("lg.yr", lg1, sep = ""), 1, 0)
t0 <- Sys.time()
d1 <- conf_int.lm(plyr.reg, c.lg1, a = 0.05)
tf<- Sys.time()
tf-t0
d1
#Experiment with sparse matrix computations:
#First check multiplication:
Z=Matrix(model.matrix(plyr.reg), sparse = T)
library(Matrix)
#Experiment with sparse matrix computations:
#First check multiplication:
Z=Matrix(model.matrix(plyr.reg), sparse = T)
#Still not enough memory
Matrix(c.lg1)
#Still not enough memory
ncol(Matrix(c.lg1, sparse = T))
#confidence interval for lm
conf_int.lm_sp=function(lmout,c,d=0,a){
c.sp <- Matrix(c, sparse = T)
b=Matrix(coef(lmout), sparse = T)
var.b <- Matrix(vcov(lmout), sparse = T)
X=Matrix(model.matrix(lmout), sparse = T)
df= nrow(X) - length(b)
cb.d=c%*%b-d
X.X <- t(X)%*%X
tquant <- qt(1-a/2,df)
std.dev = sqrt(t(c)%*%var.b%*%c)
lower = cb.d - tquant%*%sqrt(t(c)%*%var.b%*%c)
upper = cb.d + tquant%*%sqrt(t(c)%*%var.b%*%c)
data.frame(est = cb.d, std.dev = std.dev, lower = lower, upper = upper)
}
#confidence interval for lm
conf_int.lm_sp=function(lmout,c,d=0,a){
c.sp <- Matrix(c, sparse = T)
b=Matrix(coef(lmout), sparse = T)
var.b <- Matrix(vcov(lmout), sparse = T)
X=Matrix(model.matrix(lmout), sparse = T)
df= nrow(X) - length(b)
cb.d=c%*%b-d
#X.X <- t(X)%*%X
tquant <- qt(1-a/2,df)
std.dev = sqrt(t(c)%*%var.b%*%c)
lower = cb.d - tquant%*%sqrt(t(c)%*%var.b%*%c)
upper = cb.d + tquant%*%sqrt(t(c)%*%var.b%*%c)
data.frame(est = cb.d, std.dev = std.dev, lower = lower, upper = upper)
}
Sig = Matrix(vcov(plyr.reg), sparse = T)
vec = Matrix(c.lg1, sparse = T)
ncol(vec)
Sig%*%vec
t0 = Sys.time()
d2 = conf_int.lm_sp(plyr.reg, c.lg1, a = 0.5)
tf - t0
t(vec)%*%Sig%*%vec
print(d1)
sqrt(t(vec)%*%Sig%*%vec)
print(d1)
A = sqrt(t(vec)%*%Sig%*%vec)
A[1,1]
A = sqrt(t(vec)%*%Sig%*%vec)[1,1]
#confidence interval for lm
conf_int.lm_sp=function(lmout,c,d=0,a){
c.sp <- Matrix(c, sparse = T)
b=Matrix(coef(lmout), sparse = T)
var.b <- Matrix(vcov(lmout), sparse = T)
X=Matrix(model.matrix(lmout), sparse = T)
df= nrow(X) - length(b)
cb.d=(c%*%b)[1,1]-d
#X.X <- t(X)%*%X
tquant <- qt(1-a/2,df)
std.dev = sqrt(t(c)%*%var.b%*%c)[1,1]
lower = cb.d - tquant*std.dev
upper = cb.d + tquant*std.dev
data.frame(est = cb.d, std.dev = std.dev, lower = lower, upper = upper)
}
t0 = Sys.time()
d2 = conf_int.lm_sp(plyr.reg, c.lg1, a = 0.5)
tf - t0
t0 = Sys.time()
d2 = conf_int.lm_sp(plyr.reg, c.lg1, a = 0.5)
tf = Sys.time()
tf - t0
#This code takes about 1.5 minutes
print(d2)
print(d1)
HAplot
load("C:/Users/Lee/Box/Iowa State/Baseball/CSL Project 2019/DI_LeagueComparisons/ComparisonsWithMLB/ModelSelection.RData")
?gls
library(nlme)
?gls
library(Lahman)
#library(vistime)
library(plyr)
setwd("~/")
setwd("C:/Users/Lee/Git Repos/CollegeBaseball/ComparisonsWithMLB")
#library(vistime)
library(plyr)
library(MASS)
library(nlme)
library(igraph)
library(lme4)
source("CompFunctions.R")
hitters <- Batting
hitters$YR <- hitters$yearID
hitters$birth.yr <- get.birthyr(hitters$playerID)
#############
#cutyr <- 1870
minPA <- 10
summary(hitters)
#This is designed to work with the Lahman batting data
comp.bat <- function(d){
PA <- rowSums(d[,c("AB", "BB", "HBP", "SF")], na.rm = TRUE)
OBP <- rowSums(d[,c("H", "BB", "HBP")], na.rm = TRUE)/PA
TB <- d$H + d$X2B + 2*d$X3B + 3*d$HR
BA <- ifelse(d$AB >0, d$H/d$AB, 0)
SLG <- ifelse(d$AB >0, TB/d$AB, 0)
OPS <- SLG + OBP
data.frame(Plyr = d$playerID, YR = d$yearID, LG = d$lgID, TM = d$teamID, G = d$G,PA = PA, AB = d$AB, H=d$H,
X2B= d$X2B, X3B = d$X3B, HR= d$HR, BB=d$BB, HBP = d$HBP,SB=d$SB, CS=d$CS,
SH=d$SH, SF=d$SF, BA = BA, SLG=SLG, OBP=OBP, OPS=OPS, birth.yr = d$birth.yr)
}
#hit <- hitters[hitters$yearID > cutyr,]
#hit <- hitters[hitters$yearID >1898 & hitters$yearID <1915,]
#Stint <- hit.2010$stint
#Experience <- hit.2010$experience
hit <- comp.bat(hittters)
#hit <- hitters[hitters$yearID > cutyr,]
#hit <- hitters[hitters$yearID >1898 & hitters$yearID <1915,]
#Stint <- hit.2010$stint
#Experience <- hit.2010$experience
hit <- comp.bat(hitters)
head(hit)
summary(hit)
View(hit)
hit.na <- hit[is.na(hit$OPS),]
head(hit.na)
hit <- hit[hit$PA >minPA, ]
hit$PAsc <- hit$PA/max(hit$PA)
head(hit)
summary(hit)
#hit.2010$plyr.yr <- as.factor(paste(hit.2010$Plyr, hit.2010$YR, sep = "."))
hit$lg.yr <- as.factor(paste(hit$LG, hit$YR, sep = "."))
head(hit)
player.bio <- function(d){
n.obs <- length(d$YR)
n.ssns <- length(unique(d$YR))
r.ssn <- min(d$YR)
r.lg <- d$LG[d$YR == r.ssn]
birth.yr <- d$birth.yr[1]
data.frame(n.obs = n.obs, n.ssns = n.ssns, r.ssn = r.ssn)
}
player.bios <- function(d){
n.obs <- length(d$YR)
n.ssns <- length(unique(d$YR))
r.ssn <- min(d$YR)
r.lg <- d$LG[d$YR == r.ssn]
birth.yr <- d$birth.yr[1]
data.frame(n.obs = n.obs, n.ssns = n.ssns, r.ssn = r.ssn)
}
players <- ddply(hit, .(Plyr), player.bios)
summary(players)
player.bios <- function(d){
n.obs <- length(d$YR)
n.ssns <- length(unique(d$YR))
r.ssn <- min(d$YR)
r.lg <- d$LG[d$YR == r.ssn]
birth.yr <- d$birth.yr[1]
data.frame(n.obs = n.obs, n.ssns = n.ssns, r.ssn = r.ssn,
r.lg = r.lg, birth.yr = birth.yr)
}
players <- ddply(hit, .(Plyr), player.bios)
hit <- hit[!is.na(hit$birth.yr + hit$OPS),]
players <- ddply(hit, .(Plyr), player.bios)
library(lmerTest)
summary(players)
############
head(hit)
t0 <- Sys.time()
mixed1 <-lmer(OPS ~ lg.yr + (1|Plyr), data = hit, weights = PAsc)
tf <- Sys.time()
print(tf - t0)
summary(hit)
summary(mixed1)
anova(mixed1)
fixef(mixed1)
t0 <- Sys.time()
mixed2 <-lmer(OPS ~ 0 + lg.yr + birth.yr + (1|Plyr), data = hit, weights = PAsc)
tf <- Sys.time()
print(tf - t0)
fixef(mixed2)
summary(mixed2)
t0 <- Sys.time()
mixed2 <-lmer(OPS ~ lg.yr + birth.yr + (1|Plyr), data = hit, weights = PAsc)
tf <- Sys.time()
print(tf - t0)
fixef(mixed2)
fixef(mixed1)
anova(mixed1, mixed2)
hit$birth.yrf <- as.factor(hit$birth.yr)
head(hit)
t0 <- Sys.time()
mixed3 <-lmer(OPS ~ 0 + lg.yr + birth.yrf + (1|Plyr), data = hit, weights = PAsc)
tf <- Sys.time()
print(tf - t0)
anova(mixed2,mixed3)
table(hit$birth.yr)
players$birth.yr
table(players$birth.yr)
table(players$birth.yr, players$n.ssns)
plot(players$birth.yr, players$n.ssns)
players[players$n.ssns>26,]
hit[Plyr == "ansonca01",]
hit[hit$Plyr == "ansonca01",]
data()
head(People)
People[People$playerID == "ansonca01",]
vets <- players$Plyr[players$n.ssns>23,]
vets <- players$Plyr[players$n.ssns>23]
vets
People[People$playerID %in% vets,]
anova(mixed2,mixed3)
?corClasses
