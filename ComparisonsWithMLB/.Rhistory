DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
MeanSq.I <- Sums.I[1:3]/DF.I[1:3]
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- MeanSq.I/sighat
F_stats.I <- c(F_stats.I, NA,NA)
F_stats.I
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,MeanSq.I,F_stats.I,p_value.I)
Type_I
MeanSq.I <- Sums.I/DF.I
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- MeanSq.I[1:3]/sighat
F_stats.I <- c(F_stats.I, NA,NA)
F_stats.I
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,MeanSq.I,F_stats.I,p_value.I)
Type_I
anova(model1)
#install.packages("emmeans")
data <-pigs
data$log.conc <- log(data$conc)
data$pct <- factor(data$percent)
model1 <- lm(log.conc ~source+pct+source:pct, data = data)
X = model.matrix(model1)
X
Rank(X)
y = data$log.conc
proj=function(x){
x%*%ginv(t(x)%*%x)%*%t(x)
}
#Type 1 sum of Squares
head(X)
X1= X[,1]
X2 = X[,1:3]
X3 = X[,1:6]
X4 = X
p1 = proj(X1)
X = model.matrix(model1)
y = data$log.conc
X1= X[,1]
X2 = X[,1:3]
X3 = X[,1:6]
X4 = X
p1 = proj(X1)
p2= proj(X2)
p3 = proj(X3)
p4= proj(X4)
eye = diag(x = 1, nrow = length(y))
#Here we construct the anova table for type I sums of squares
Sources_of_Error <- c("Source", "Percentage", "Percent x Source", "Error", "C. Total")
Sums.I <- c(t(y)%*%(p2-p1)%*%y, t(y)%*%(p3-p2)%*%y, t(y)%*%(p4-p3)%*%y, t(y)%*%(eye-p4)%*%y,t(y)%*%(eye-p1)%*%y)
Sums.I
DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
MeanSq.I <- Sums.I/DF.I
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- MeanSq.I[1:3]/sighat
F_stats.I <- c(F_stats.I, NA,NA)
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,MeanSq.I,F_stats.I,p_value.I)
Type_I
#Leave out main and interaction effects with source
X.nosource = X[,c(1,4,5,6)]
#Leave out main and interaction effects for pct
X.nopct = X[,c(1,2,3)]
X.noint <- X[,1:6]
#We already have the interaction effects and error sum of squares from the type 1 table
pns <- proj(X.nosource)
pnp <- proj(X.nopct)
pnint <- proj(X.noint)
pX <- proj(X)
Sums.II <- c(t(y)%*%(pnint-pns)%*%y, t(y)%*%(pnint-pnp)%*%y,Sums.I[3:4],NA)
DF.II <- c(Rank(pnint)-Rank(pns), Rank(pnint)-Rank(pnp), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), NA)
MeanSq.II <- Sums.II/DF.II
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.II <- MeanSq.II[1:3]/sighat
F_stats.II <- c(F_stats.II, NA,NA)
p_value.II <- pf(F_stats.II, DF.II, df2 = 29-Rank(X),lower.tail = FALSE)
Type_II <- data.frame(Sources_of_Error,Sums.II, DF.II,MeanSq.II,F_stats.II,p_value.II)
Type_II
#For comparison, use the Anova function from CAR package
#install.packages("car")
library(car)
Anova(model1, type = "II")
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
Z <- model.matrix(model2)[,c(1,4,7,10,2,5,8,11,3,6,9,12)]
#Here is a rank 10 matrix to model no source main effects
Z1 <- Z[,c(1:7,9:11)]
#Change rows with soy, 15 and skim 15
Z1[data$source =="soy" & data$pct== 18,]<- c(1,1,1,1,-1,-1,-1,0,0,0)
Z1[data$source =="skim" & data$pct == 18,] <-c(1,1,1,1,0,0,0,-1,-1,-1)
#Here we produce a rank 9 matrix to model no pct main effects
Z2 <- Z[,1:9]
M <- matrix(c(1,-1,0,0,1,-1,0,0,1), nrow = 3, ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct== 12,]<- M
Z2[data$source =="skim" & data$pct == 15,] <-matrix(c(1,0,-1,0,1,0,-1,0,1), nrow = 2,ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct == 18,] <-matrix(c(1,0,0,-1,1,0,0,-1,1), nrow = 1, ncol = 9, byrow = TRUE)
#View(Z2)
pz1 <- proj(Z1)
pz2 <- proj(Z2)
pZ <- proj(Z)
Sums.III <- c(t(y)%*%(pZ-pz1)%*%y, t(y)%*%(pZ-pz2)%*%y,Sums.I[3:4],NA)
DF.III <- c(Rank(pZ)-Rank(pz1), Rank(pZ)-Rank(pz2), Rank(pZ)-Rank(p3), Rank(eye)-Rank(p4), NA)
MeanSq.III <- Sums.III/DF.III
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.III <- F_numIII[1:3]/sighat
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
#Now we build the type III anova table.  This means we always test against the full model.
#table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
head(model.matrix(model2))
#Now we build the type III anova table.  This means we always test against the full model.
#table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
Z <- model.matrix(model2)[,c(1,4,7,10,2,5,8,11,3,6,9,12)]
proj(Z)-proj(X)
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
head(model.matrix(model2))
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
Z <- model.matrix(model2)[,c(1,4,7,10,2,5,8,11,3,6,9,12)]
#Here is a rank 10 matrix to model no source main effects
Z1 <- Z[,c(1:7,9:11)]
#Change rows with soy, 15 and skim 15
Z1[data$source =="soy" & data$pct== 18,]<- c(1,1,1,1,-1,-1,-1,0,0,0)
Z1[data$source =="skim" & data$pct == 18,] <-c(1,1,1,1,0,0,0,-1,-1,-1)
#Here we produce a rank 9 matrix to model no pct main effects
Z2 <- Z[,1:9]
M <- matrix(c(1,-1,0,0,1,-1,0,0,1), nrow = 3, ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct== 12,]<- M
Z2[data$source =="skim" & data$pct == 15,] <-matrix(c(1,0,-1,0,1,0,-1,0,1), nrow = 2,ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct == 18,] <-matrix(c(1,0,0,-1,1,0,0,-1,1), nrow = 1, ncol = 9, byrow = TRUE)
#View(Z2)
pz1 <- proj(Z1)
pz2 <- proj(Z2)
pZ <- proj(Z)
Sums.III <- c(t(y)%*%(pZ-pz1)%*%y, t(y)%*%(pZ-pz2)%*%y,Sums.I[3:4],NA)
Sums.III
DF.III <- c(Rank(pZ)-Rank(pz1), Rank(pZ)-Rank(pz2), Rank(pZ)-Rank(p3), Rank(eye)-Rank(p4), NA)
MeanSq.III <- Sums.III/DF.III
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.III <- MeanSq.III[1:3]/sighat
F_stats.III <- c(F_stats.III, NA,NA)
p_value.III <- pf(F_stats.III, DF.III, df2 = 29-Rank(X),lower.tail = FALSE)
Type_III <- data.frame(Sources_of_Error,Sums.III, DF.III,F_stats.III,p_value.III)
Type_III
#Since Z is the matrix for the cell means model, we can find an estimate for our parameters
beta <- ginv(t(Z)%*%Z)%*%t(Z)%*%y
beta
#LS mean accross source fish
c1. = c(1,1,1,1,zeros(1,8))/4
t(c1.)%*% beta
#LSM accross soy
c2. = c(zeros(1,4), ones(1,4), zeros(1,4))/4
t(c2.)%*% beta
#LSM accrose source skim
c3. = c(zeros(1,8), ones(1,4))/4
t(c3.)%*%beta
#LS mean accross pct 9
c.1 = rep(c(1,0,0,0),3)/3
t(c.1)%*% beta
#LSM accross pct 12
c.2 = rep(c(0,1,0,0),3)/3
t(c.2)%*% beta
#LSM accross pct 15
c.3 = rep(c(0,0,1,0),3)/3
t(c.3)%*%beta
#LSM accross pct 18
c.4 <- rep(c(0,0,0,1),3)/3
t(c.4)%*% beta
#Here is a simpler model that uses percent as a quantitative variable:
model3 <- lm(log.conc~source +percent + source:percent, data = data)
model.matrix(model3)
anova(model3,model1)
anova(model3,model2)
#Here is a simpler model that uses percent as a quantitative variable:
model3 <- lm(log.conc~source +percent + source:percent, data = data)
model.matrix(model3)
#Here is a simpler model that uses percent as a quantitative variable:
model3 <- lm(log.conc~source +percent + source:percent, data = data)
anova(model3,model2)
summary(model3)
?pigs
0.0006487+0.0210995
3.1164196 -0.0672164
#Lee Przybylski
#11/13/2020
#Code for fitting at leaset 5 different mixed models using max likelihood.
#At the end, there is code for obtaining some residual plots, as well as
#scatter plots representing the estimates of fixed intercepts in the models.
library(Lahman)
#library(vistime)
library(plyr)
library(MASS)
library(nlme)
library(igraph)
library(lme4)
library(lmerTest)
source("CompFunctions.R")
hitters <- Batting
hitters$YR <- hitters$yearID
hitters$birth.yr <- get.birthyr(hitters$playerID)
#############
#cutyr <- 1870
minPA <- 10
#hit <- hitters[hitters$yearID > cutyr,]
#hit <- hitters[hitters$yearID >1898 & hitters$yearID <1915,]
#Stint <- hit.2010$stint
#Experience <- hit.2010$experience
hit <- comp.bat(hitters)
source("CompFunctions.R")
setwd("C:/Users/leep/CollegeBaseball/ComparisonsWithMLB")
source("CompFunctions.R")
#hit <- hitters[hitters$yearID > cutyr,]
#hit <- hitters[hitters$yearID >1898 & hitters$yearID <1915,]
#Stint <- hit.2010$stint
#Experience <- hit.2010$experience
hit <- comp.bat(hitters)
head(hit)
summary(hit)
hit <- hit[hit$PA >minPA, ]
hit$PAsc <- hit$PA/max(hit$PA)
summary(hit)
#hit.2010$plyr.yr <- as.factor(paste(hit.2010$Plyr, hit.2010$YR, sep = "."))
hit$lg.yr <- as.factor(paste(hit$LG, hit$YR, sep = "."))
hit$YRf <- as.factor(hit$YR)
hit <- hit[!is.na(hit$birth.yr + hit$OPS),]
players <- ddply(hit, .(Plyr), player.bios)
summary(players)
t0 <- Sys.time()
mixed1 <-lmer(OPS ~ lg.yr + (1|Plyr), data = hit, weights = PAsc, REML = FALSE)
tf <- Sys.time()
print(tf - t0)
comptimes[4] <- (tf - t0)
#summary(mixed1)
#anova(mixed1)
#fixef(mixed1)
df <- data.frame(cbind(hit$OPS, predict(mixed1), residuals(mixed1)))
head(df)
#Add an effect for the player's birth year
t0 <- Sys.time()
mixed2 <-lmer(OPS ~ lg.yr + birth.yr + (1|Plyr), data = hit, weights = PAsc, REML = FALSE)
tf <- Sys.time()
print(tf - t0)
comptimes[5] <- tf - t0
#fixef(mixed2)
#fixef(mixed1)
#summary(mixed2)
#anova(mixed1, mixed2)
#Treat birth.yr as a factor
hit$birth.yrf <- as.factor(hit$birth.yr)
#head(hit)
t0 <- Sys.time()
mixed3 <-lmer(OPS ~ lg.yr + birth.yrf + (1|Plyr), data = hit, weights = PAsc, REML = FALSE)
tf <- Sys.time()
print(tf - t0)
comptimes[6] <- tf - t0
fixef(mixed2)
fixef(mixed3)
t0 <- Sys.time()
lm0 <-lm(OPS ~ LG + YR, data = hit, weights = PAsc)
tf <- Sys.time()
print(tf - t0)
head(hit)
#hit <- hitters[hitters$yearID > cutyr,]
#hit <- hitters[hitters$yearID >1898 & hitters$yearID <1915,]
#Stint <- hit.2010$stint
#Experience <- hit.2010$experience
hit <- comp.bat(hitters)
head(hit)
summary(hit)
hit <- hit[hit$PA >minPA, ]
hit$PAsc <- hit$PA/max(hit$PA)
summary(hit)
#hit.2010$plyr.yr <- as.factor(paste(hit.2010$Plyr, hit.2010$YR, sep = "."))
hit$lg.yr <- as.factor(paste(hit$LG, hit$YR, sep = "."))
hit$YRf <- as.factor(hit$YR)
hit <- hit[!is.na(hit$birth.yr + hit$OPS),]
#hit <- hitters[hitters$yearID > cutyr,]
#hit <- hitters[hitters$yearID >1898 & hitters$yearID <1915,]
#Stint <- hit.2010$stint
#Experience <- hit.2010$experience
hit <- comp.bat(hitters)
head(hit)
summary(hit)
hit <- hit[hit$PA >minPA, ]
hit$PAsc <- hit$PA/max(hit$PA)
summary(hit)
#hit.2010$plyr.yr <- as.factor(paste(hit.2010$Plyr, hit.2010$YR, sep = "."))
hit$lg.yr <- as.factor(paste(hit$LG, hit$YR, sep = "."))
hit$YRf <- as.factor(hit$YR)
#hit <- hit[!is.na(hit$birth.yr + hit$OPS),]
players <- ddply(hit, .(Plyr), player.bios)
#hit <- hit[!is.na(hit$birth.yr + hit$OPS),]
#players <- ddply(hit, .(Plyr), player.bios)
#summary(players)
############
#Fit models with random player effects
############
comptimes <- rep(NA, 10)
t0 <- Sys.time()
lm0 <-lm(OPS ~ LG + YR, data = hit, weights = PAsc)
tf <- Sys.time()
print(tf - t0)
comptimes[1] <- (tf - t0)
t0 <- Sys.time()
mixed2 <-lmer(OPS ~ lg.yr + birth.yr + (1|Plyr), data = hit, weights = PAsc, REML = FALSE)
tf <- Sys.time()
print(tf - t0)
#Add an effect for the player's birth year
hit$birth.yr <- get.birthyr(hit$Plyr)
t0 <- Sys.time()
mixed2 <-lmer(OPS ~ lg.yr + birth.yr + (1|Plyr), data = hit, weights = PAsc, REML = FALSE)
tf <- Sys.time()
print(tf - t0)
#Treat birth.yr as a factor
hit$birth.yrf <- as.factor(hit$birth.yr)
t0 <- Sys.time()
mixed3 <-lmer(OPS ~ lg.yr + birth.yrf + (1|Plyr), data = hit, weights = PAsc, REML = FALSE)
tf <- Sys.time()
print(tf - t0)
#Fit the final MLB OPS model and perform hypothesis testing.  Must run the start of FitMixedEffModel_MLB.R
model.mlb <-lmer(OPS ~ lg.yr + birth.yrf + (1|Plyr) + (1|tm.yr), data = hit, weights = PAsc, REML = TRUE)
#anova(mixed2,mixed3)
hit$tm.yr <- as.factor(paste(hit$TM,hit$YR, sep = "."))
#Fit the final MLB OPS model and perform hypothesis testing.  Must run the start of FitMixedEffModel_MLB.R
model.mlb <-lmer(OPS ~ lg.yr + birth.yrf + (1|Plyr) + (1|tm.yr), data = hit, weights = PAsc, REML = TRUE)
#Fit the final MLB OPS model and perform hypothesis testing.  Must run the start of FitMixedEffModel_MLB.R
library(xtable)
#Extract the anova table
xtable(anova(model.mlb))
lgeffects <- fixef(model.mlb)[grepl("lg.yr", names(fixef(model)))]
lgeffects <- fixef(model.mlb)[grepl("lg.yr", names(fixef(model.mlb)))]
head(lgeffects)
ssns <- as.numeric(substrRight(names(lgeffects), 4))
head(ssns)
plot(ssns, lgeffects, xlab = "season", ylab = "lg.yr effect")
abline(h = 0)
abline(v = 1973, col = "blue", lty = "dashed")
lgs <- substr(names(lgeffects,5))
lgs <- substr(names(lgeffects),5)
lgs <- substr(names(lgeffects),1,5)
lgs
lgs <- substr(names(lgeffects),1,7)
lgs <- substrR(lgs, 2)
lgs <- substrRight(lgs, 2)
lgs
d_lgeffs <- data.frame(cbind(ssns, lgeffs, lgs))
d_lgeffs <- data.frame(cbind(ssns, lgeffects, lgs))
head(d_lgeffs)
library(ggplot2)
LEplot <- ggplot(d_lgeffs, aes(x = ssns, y = lgeffects, color = lgs)) +
geom_line()
LEplot <- LEplot+labs(title = "League Effects on OPS", x = "Year", y = "Difference in OPS")+
scale_x_continuous(breaks=seq(1870, 2020, 10))
LEplot
LEplot <- ggplot(d_lgeffs, aes(x = ssns, y = lgeffects, color = lgs)) +
geom_line()
LEplot
d_lgeffs <- data.frame(cbind(ssns, lgeffects, lgs))
d_lgeffs
summary(d_lgeffs)
d_lgeffs$ssns <- as.numeric(d_lgeffs$ssns)
d_lgeffs$lgeffects <- as.numeric(d_lgeffs$lgeffects)
summary(d_lgeffs)
ssns <- as.numeric(substrRight(names(lgeffects), 4))
ssns
d_lgeffs <- data.frame(cbind(as.numeric(ssns), as.numeric(lgeffects), lgs))
head(d_lgeffs)
names(d_lgeffs) <- c("Year", "Effect")
head(d_lgeffs)
summary(d_lgeffs)
d_lgeffs <- data.frame(cbind(as.numeric(ssns), as.numeric(lgeffects), lgs))
summary(d_lgeffs)
ssns <- as.numeric(substrRight(names(lgeffects), 4))
ssns[1] + 1
ssns <- as.numeric(substrRight(names(lgeffects), 4))
head(ssns)
drop(lgeffects)
head(lgeffects)
lgeffects <- fixef(model.mlb)[grepl("lg.yr", names(fixef(model.mlb)))]
lgeffects <- fixef(model.mlb)[grepl("lg.yr", names(fixef(model.mlb)))]
head(lgeffects)
ssns <- as.numeric(substrRight(names(lgeffects), 4))
head(ssns)
plot(ssns, lgeffects, xlab = "season", ylab = "lg.yr effect")
abline(h = 0)
abline(v = 1973, col = "blue", lty = "dashed")
lgs <- substr(names(lgeffects),1,7)
lgs <- substrRight(lgs, 2)
lgs <- substr(names(lgeffects),1,7)
lgs <- as.factor(substrRight(lgs, 2))
d_lgeffs <- data.frame(cbind(as.numeric(ssns), as.numeric(lgeffects), lgs))
head(d_lgeffs)
summary(d_lgeffs)
d_lgeffs <- cbind.data.frame(as.numeric(ssns), as.numeric(lgeffects), lgs))
d_lgeffs <- cbind.data.frame(as.numeric(ssns), as.numeric(lgeffects), lgs)
head(d_lgeffs)
summary(d_lgeffs)
d_lgeffs <- cbind.data.frame(ssns, lgeffects, lgs)
names(d_lgeffs) <- c("Year", "Effect", "League")
head(d_lgeffs)
summary(d_lgeffs)
library(ggplot2)
LEplot <- ggplot(d_lgeffs, aes(x = ssns, y = lgeffects, color = lgs)) +
geom_line()
LEplot <- LEplot+labs(title = "League Effects on OPS", x = "Year", y = "Difference in OPS")+
scale_x_continuous(breaks=seq(1870, 2020, 10))
LEplot + scale_y_continuous(breaks=seq(-0.2, 0.4, 0.05))+
geom_vline(xintercept = 1884, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1889, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1901, linetype="dotted", color = "red", size=1)+
geom_vline(xintercept = 1903, linetype="dotted", color = "blue", size=1)+
geom_vline(xintercept = 1893, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1969, linetype="dotted", color = "black", size=1)
LEplot + scale_y_continuous(breaks=seq(-0.2, 0.4, 0.05))+
geom_vline(xintercept = 1884, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1889, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1901, linetype="dotted", color = "red", size=1)+
geom_vline(xintercept = 1903, linetype="dotted", color = "blue", size=1)+
geom_vline(xintercept = 1893, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1969, linetype="dotted", color = "black", size=1)+
geom_hline(yintercept = 0)
LEplot + scale_y_continuous(breaks=seq(-0.2, 0.4, 0.05))+
geom_vline(xintercept = 1884, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1889, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1901, linetype="dotted", color = "red", size=1)+
geom_vline(xintercept = 1903, linetype="dotted", color = "blue", size=1)+
geom_vline(xintercept = 1893, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1969, linetype="dotted", color = "black", size=1)
names(d_lgeffs) <- c("Year", "Effect", "League")
head(d_lgeffs)
LEplot <- ggplot(d_lgeffs, aes(x = Year, y = Effect, color = League)) +
geom_line()
LEplot <- LEplot+labs(title = "League Effects on OPS", x = "Year", y = "Difference in OPS")+
scale_x_continuous(breaks=seq(1870, 2020, 10))
LEplot + scale_y_continuous(breaks=seq(-0.2, 0.4, 0.05))+
geom_vline(xintercept = 1884, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1889, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1901, linetype="dotted", color = "red", size=1)+
geom_vline(xintercept = 1903, linetype="dotted", color = "blue", size=1)+
geom_vline(xintercept = 1893, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1969, linetype="dotted", color = "black", size=1)
LEplot <- ggplot(d_lgeffs, aes(x = Year, y = Effect, color = League)) +
geom_line(size = 1.5)
LEplot <- LEplot+labs(title = "League Effects on OPS", x = "Year", y = "Difference in OPS")+
scale_x_continuous(breaks=seq(1870, 2020, 10))
LEplot + scale_y_continuous(breaks=seq(-0.2, 0.4, 0.05))+
geom_vline(xintercept = 1884, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1889, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1901, linetype="dotted", color = "red", size=1)+
geom_vline(xintercept = 1903, linetype="dotted", color = "blue", size=1)+
geom_vline(xintercept = 1893, linetype="dotted", color = "black", size=1)+
geom_vline(xintercept = 1969, linetype="dotted", color = "black", size=1)
birth.yr.eff <- fixef(model.mlb)[grepl("birth.yr", names(fixef(model.mlb)))]
birth.yr.eff
ssns <- as.numeric(substrRight(names(birth.yr.eff), 4))
head(ssns)
plot(ssns, birth.yr.eff, xlab = "season")
abline(h = 0)
abline(v = 1973, col = "blue", lty = "dashed")
d_b.effs <- cbind.data.frame(ssns, birth.yr.eff)
birth.yr.eff <- fixef(model.mlb)[grepl("birth.yr", names(fixef(model.mlb)))]
birth.yr <- as.numeric(substrRight(names(birth.yr.eff), 4))
head(birth.yr)
plot(birth.yr, birth.yr.eff)
abline(h = 0)
#abline(v = 1973, col = "blue", lty = "dashed")
d_b.effs <- cbind.data.frame(birth.yr, birth.yr.eff)
names(d_b.effs) <- c("Birth Year", "Effect")
head(d_b.effs)
names(d_b.effs) <- c("Birth_Year", "Effect")
head(d_b.effs)
BEplot <- ggplot(d_b.effs, aes(x = Birth_Year, y = Effect)) +
geom_line(size = 1.5)
BEplot <- LEplot+labs(title = "League Effects on OPS", x = "Year", y = "Difference in OPS")+
scale_x_continuous(breaks=seq(1870, 2020, 10))
#abline(v = 1973, col = "blue", lty = "dashed")
d_b.effs <- cbind.data.frame(birth.yr, birth.yr.eff)
names(d_b.effs) <- c("Birth_Year", "Effect")
head(d_b.effs)
BEplot <- ggplot(d_b.effs, aes(x = Birth_Year, y = Effect)) +
geom_line(size = 1.5)
BEplot <- LEplot+labs(title = "Hitting Ability by Birth Year", x = "Birth Year",
y = "Difference in OPS")+ scale_x_continuous(breaks=seq(1870, 2020, 10))
BEplot <- LEplot+labs(title = "Hitting Ability by Birth Year", x = "Birth Year",
y = "Difference in OPS")
#abline(v = 1973, col = "blue", lty = "dashed")
d_b.effs <- cbind.data.frame(birth.yr, birth.yr.eff)
names(d_b.effs) <- c("Birth_Year", "Effect")
head(d_b.effs)
BEplot <- ggplot(d_b.effs, aes(x = Birth_Year, y = Effect)) +
geom_line(size = 1.5)
BEplot <- BEplot+labs(title = "Hitting Ability by Birth Year", x = "Birth Year",
y = "Difference in OPS")
BEplot + scale_x_continuous(breaks=seq(1870, 2020, 10))
BEplot <- ggplot(d_b.effs, aes(x = Birth_Year, y = Effect)) +
geom_point(size = 1.5)
BEplot <- BEplot+labs(title = "Hitting Ability by Birth Year", x = "Birth Year",
y = "Difference in OPS")
BEplot + scale_x_continuous(breaks=seq(1870, 2020, 10))
BEplot + scale_x_continuous(breaks=seq(1840, 2020, 10))
summary(model.mlb)
