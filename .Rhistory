Rank(p4)
Rank(eye-p4)
Rank(eye) - Rank(p4)
anova(model1)
DF.2 <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.2
Rank(p2)- Rank(p1)
Rank(p2-p1)
Rank(X)-Rank(p2)
Rank(p4)-Rank(p2)
Rank(p4-p2)
DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
F-stat.I <- Sums.I[1,3]/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
Sources_of_Error <- c("Source|Int", "Pct|Int,Source", "Pct x Source|Int,Source,Pct", "Error", "C. Total")
Sums.I <- c(t(y)%*%(p2-p1)%*%y, t(y)%*%(p3-p2)%*%y, t(y)%*%(p4-p3)%*%y, t(y)%*%(eye-p4)%*%y,t(y)%*%(eye-p1)%*%y)
Sums.I
DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
F-stat.I <- Sums.I[1,3]/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
t(y)%*%(eye-p4)
t(y)%*%(eye-p4)%*%y
F-stat.I <- Sums.I[1:3]/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
Sums.I[1:3]/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
anova(model1)
Sums.I/DF.I
Sums.I/DF.I[1:3]
Sums.I[1:3]/DF.I[1:3]
F-stats.I <- (Sums.I[1:3]/DF.I[1:3])/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- (Sums.I[1:3]/DF.I[1:3])/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- as.vector((Sums.I[1:3]/DF.I[1:3])/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X))))
F_stats.I <- as.vector((Sums.I[1:3]/DF.I[1:3])/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- as.vector(Sums.I[1:3]/DF.I[1:3])/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- as.vector(Sums.I[1:3])/as.vector(DF.I[1:3])/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
Sums.I[1:3])/as.vector(DF.I[1:3]
Sums.I[1:3])/DF.I[1:3]
Sums.I[1:3]/DF.I[1:3]
F_num <- Sums.I[1:3]/DF.I[1:3]
F_stats.I <- F_num/((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- as.vector(F_num)/(t(y)%*%(eye-p4)%*%y/(Rank(eye)-Rank(X)))
type(F_num)
typeof(F_num)
F_num <- Sums.I[1:3]/DF.I[1:3]
F_num
F_num/5
sighat <-(t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X))
F_stats.I <- F_num/sighat
F_stats.I
anova(model1)
sighat <-(t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X))
6/sighat
F_num/sighat
c(1,5,9)/sighat
as.vector(1,5,9)
as.vector(c(1,5,9)
as.vector(c(1,5,9))
as.vector(c(1,5,9))
as.vector(c(1,5,9))/sighat
sighat
as.numeric(sighat)
sighat <-as.numeric(t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X))))
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- F_num/sighat
F_stats.I
t(y)%*%(eye-p4)%*%y
F_stats.I <- F_num/sighat
F_stats.I
p_value.I <- pf(F_stats.I, DF.I,lower.tail = TRUE)
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = TRUE)
p_value.I
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
p_value.I
Type_I <- data.frame(Sums.I, DF.I,F_stats.I,p_value.I)
p_value.I <- c(p_value.I, NA,NA)
F_stats.I <- c(F_stats.I, NA,NA)
F_stats.I
Type_I <- data.frame(Sums.I, DF.I,F_stats.I,p_value.I)
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sums.I, DF.I,F_stats.I,p_value.I)
Type_I
anova(model1)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,F_stats.I,p_value.I)
Type_I
anova(model1)
View(Type_I)
x
X\
X
View(X)
p_value.I <- c(p_value.I, NA,NA)
rank(X)
Rank(X)
#Here We construct the anova table for type II sums of squares
X1 = X[,1]
#Here We construct the anova table for type II sums of squares
head(X)
#Leave out main and interaction effects with source
X2 = X[,c(1,4,5,6)]
#Leave out main and interaction effects for pct
X3 = X[,c(1,2,3)]
X1 = X[,1]
#Leave out main and interaction effects with source
X2 = X[,c(1,4,5,6)]
#Leave out main and interaction effects for pct
X3 = X[,c(1,2,3)]
#We already have the interaction effects and error sum of squares from the type 1 table
p1 <- proj(X1)
p2 <- proj(X2)
#Leave out main and interaction effects with source
X.nosource = X[,c(1,4,5,6)]
#Leave out main and interaction effects for pct
X.nopct = X[,c(1,2,3)]
#We already have the interaction effects and error sum of squares from the type 1 table
pns <- proj(X.nosource)
pnp <- proj(X.nopct)
pX <- proj(X)
#Here We construct the anova table for type II sums of squares
head(X)
X.noint <- X[,1:6]
X.noint
pnint <- proj(X.noint)
Sums.II <- c(t(y)%*%(pnint-pns)%*%y, t(y)%*%(pnint-pnp)%*%y,Sums.I[3:4],NA)
Sums.II
DF.II <- c(Rank(pnint)-Rank(pns), Rank(pnint)-Rank(pnp), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), NA)
DF.II
F_numII <- Sums.II[1:3]/DF.II[1:3]
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.II <- F_numII/sighat
F_stats.II <- c(F_stats.I, NA,NA)
F_stats.II
F_stats.II <- c(F_stats.II, NA,NA)
F_stats.II
F_stats.II <- F_numII/sighat
F_stats.II <- c(F_stats.II, NA,NA)
F_stats.II
p_value.II <- pf(F_stats.II, DF.II, df2 = 29-Rank(X),lower.tail = FALSE)
Type_II <- data.frame(Sources_of_Error,Sums.II, DF.II,F_stats.II,p_value.II)
Type_II
#For comparison, use the Anova function from CAR package
library(car)
#For comparison, use the Anova function from CAR package
install.packages("car")
library(car)
Anova(model1, type = "II")
Type_II
#Here we construct the anova table for type I sums of squares
Sources_of_Error <- c("Source", "Percentage", "Percent x Source", "Error", "C. Total")
#Here we construct the anova table for type I sums of squares
Sources_of_Error <- c("Source", "Percentage", "Percent x Source", "Error", "C. Total")
Sums.I <- c(t(y)%*%(p2-p1)%*%y, t(y)%*%(p3-p2)%*%y, t(y)%*%(p4-p3)%*%y, t(y)%*%(eye-p4)%*%y,t(y)%*%(eye-p1)%*%y)
Sums.I
DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
F_num <- Sums.I[1:3]/DF.I[1:3]
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- F_num/sighat
F_stats.I <- c(F_stats.I, NA,NA)
F_stats.I
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,F_stats.I,p_value.I)
Type_I
anova(model1)
#Leave out main and interaction effects with source
X.nosource = X[,c(1,4,5,6)]
#Leave out main and interaction effects for pct
X.nopct = X[,c(1,2,3)]
X.noint <- X[,1:6]
#We already have the interaction effects and error sum of squares from the type 1 table
pns <- proj(X.nosource)
pnp <- proj(X.nopct)
pnint <- proj(X.noint)
pX <- proj(X)
Sums.II <- c(t(y)%*%(pnint-pns)%*%y, t(y)%*%(pnint-pnp)%*%y,Sums.I[3:4],NA)
Sums.II
DF.II <- c(Rank(pnint)-Rank(pns), Rank(pnint)-Rank(pnp), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), NA)
DF.II
F_numII <- Sums.II[1:3]/DF.II[1:3]
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.II <- F_numII/sighat
F_stats.II <- c(F_stats.II, NA,NA)
F_stats.II
p_value.II <- pf(F_stats.II, DF.II, df2 = 29-Rank(X),lower.tail = FALSE)
Type_II <- data.frame(Sources_of_Error,Sums.II, DF.II,F_stats.II,p_value.II)
Type_II
#Now we build the type III anova table.  This means we always test against the full model.
model2 = lm(log.conc ~pct+source:pct, data = data)
model.matrix(model.2)
model.matrix(model2)
Rank(model.matrix(model2)
Rank(X)
source('C:/Users/leep/Box/Iowa State/Coursework/Stat510/R-scripts/HW7.R', echo=TRUE)
install.packages("car")
#Now we build the type III anova table.  This means we always test against the full model.
model2 = lm(log.conc ~pct+source:pct, data = data)
Rank(model.matrix(model2))
library(pracma)
library(MASS)
library(emmeans)
Rank(model.matrix(model2))
Rank(X)
View(X)
View(model.matrix(model2))
Z <- model.matrix(~0+source:pct, data = data)
view(Z)
View(Z)
Rank(Z)
proj(X)-proj(Z)
library(MASS)
library(emmeans)
library(pracma)
#install.packages("emmeans")
data <-pigs
data$log.conc <- log(data$conc)
data$pct <- factor(data$percent)
summary(data)
model1 <- lm(log.conc ~source+pct+source:pct, data = data)
summary(model1)
anova(model1)
X = model.matrix(model1)
X
Rank(X)
y = data$log.conc
proj=function(x){
x%*%ginv(t(x)%*%x)%*%t(x)
}
#Type 1 sum of Squares
head(X)
X1= X[,1]
X2 = X[,1:3]
X3 = X[,1:6]
X4 = X
p1 = proj(X1)
p2= proj(X2)
p3 = proj(X3)
p4= proj(X4)
eye = diag(x = 1, nrow = length(y))
#Here we construct the anova table for type I sums of squares
Sources_of_Error <- c("Source", "Percentage", "Percent x Source", "Error", "C. Total")
Sums.I <- c(t(y)%*%(p2-p1)%*%y, t(y)%*%(p3-p2)%*%y, t(y)%*%(p4-p3)%*%y, t(y)%*%(eye-p4)%*%y,t(y)%*%(eye-p1)%*%y)
Sums.I
DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
F_num <- Sums.I[1:3]/DF.I[1:3]
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- F_num/sighat
F_stats.I <- c(F_stats.I, NA,NA)
#Here we construct the anova table for type I sums of squares
Sources_of_Error <- c("Source", "Percentage", "Percent x Source", "Error", "C. Total")
Sums.I <- c(t(y)%*%(p2-p1)%*%y, t(y)%*%(p3-p2)%*%y, t(y)%*%(p4-p3)%*%y, t(y)%*%(eye-p4)%*%y,t(y)%*%(eye-p1)%*%y)
Sums.I
DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
MeanSq.I <- Sums.I[1:3]/DF.I[1:3]
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- MeanSq.I/sighat
F_stats.I <- c(F_stats.I, NA,NA)
F_stats.I
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,MeanSq.I,F_stats.I,p_value.I)
Type_I
MeanSq.I <- Sums.I/DF.I
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- MeanSq.I[1:3]/sighat
F_stats.I <- c(F_stats.I, NA,NA)
F_stats.I
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,MeanSq.I,F_stats.I,p_value.I)
Type_I
anova(model1)
#install.packages("emmeans")
data <-pigs
data$log.conc <- log(data$conc)
data$pct <- factor(data$percent)
model1 <- lm(log.conc ~source+pct+source:pct, data = data)
X = model.matrix(model1)
X
Rank(X)
y = data$log.conc
proj=function(x){
x%*%ginv(t(x)%*%x)%*%t(x)
}
#Type 1 sum of Squares
head(X)
X1= X[,1]
X2 = X[,1:3]
X3 = X[,1:6]
X4 = X
p1 = proj(X1)
X = model.matrix(model1)
y = data$log.conc
X1= X[,1]
X2 = X[,1:3]
X3 = X[,1:6]
X4 = X
p1 = proj(X1)
p2= proj(X2)
p3 = proj(X3)
p4= proj(X4)
eye = diag(x = 1, nrow = length(y))
#Here we construct the anova table for type I sums of squares
Sources_of_Error <- c("Source", "Percentage", "Percent x Source", "Error", "C. Total")
Sums.I <- c(t(y)%*%(p2-p1)%*%y, t(y)%*%(p3-p2)%*%y, t(y)%*%(p4-p3)%*%y, t(y)%*%(eye-p4)%*%y,t(y)%*%(eye-p1)%*%y)
Sums.I
DF.I <- c(Rank(p2)-Rank(p1), Rank(p3)-Rank(p2), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), Rank(eye)-1)
DF.I
MeanSq.I <- Sums.I/DF.I
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.I <- MeanSq.I[1:3]/sighat
F_stats.I <- c(F_stats.I, NA,NA)
p_value.I <- pf(F_stats.I, DF.I, df2 = 29-Rank(X),lower.tail = FALSE)
Type_I <- data.frame(Sources_of_Error,Sums.I, DF.I,MeanSq.I,F_stats.I,p_value.I)
Type_I
#Leave out main and interaction effects with source
X.nosource = X[,c(1,4,5,6)]
#Leave out main and interaction effects for pct
X.nopct = X[,c(1,2,3)]
X.noint <- X[,1:6]
#We already have the interaction effects and error sum of squares from the type 1 table
pns <- proj(X.nosource)
pnp <- proj(X.nopct)
pnint <- proj(X.noint)
pX <- proj(X)
Sums.II <- c(t(y)%*%(pnint-pns)%*%y, t(y)%*%(pnint-pnp)%*%y,Sums.I[3:4],NA)
DF.II <- c(Rank(pnint)-Rank(pns), Rank(pnint)-Rank(pnp), Rank(p4)-Rank(p3), Rank(eye)-Rank(p4), NA)
MeanSq.II <- Sums.II/DF.II
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.II <- MeanSq.II[1:3]/sighat
F_stats.II <- c(F_stats.II, NA,NA)
p_value.II <- pf(F_stats.II, DF.II, df2 = 29-Rank(X),lower.tail = FALSE)
Type_II <- data.frame(Sources_of_Error,Sums.II, DF.II,MeanSq.II,F_stats.II,p_value.II)
Type_II
#For comparison, use the Anova function from CAR package
#install.packages("car")
library(car)
Anova(model1, type = "II")
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
Z <- model.matrix(model2)[,c(1,4,7,10,2,5,8,11,3,6,9,12)]
#Here is a rank 10 matrix to model no source main effects
Z1 <- Z[,c(1:7,9:11)]
#Change rows with soy, 15 and skim 15
Z1[data$source =="soy" & data$pct== 18,]<- c(1,1,1,1,-1,-1,-1,0,0,0)
Z1[data$source =="skim" & data$pct == 18,] <-c(1,1,1,1,0,0,0,-1,-1,-1)
#Here we produce a rank 9 matrix to model no pct main effects
Z2 <- Z[,1:9]
M <- matrix(c(1,-1,0,0,1,-1,0,0,1), nrow = 3, ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct== 12,]<- M
Z2[data$source =="skim" & data$pct == 15,] <-matrix(c(1,0,-1,0,1,0,-1,0,1), nrow = 2,ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct == 18,] <-matrix(c(1,0,0,-1,1,0,0,-1,1), nrow = 1, ncol = 9, byrow = TRUE)
#View(Z2)
pz1 <- proj(Z1)
pz2 <- proj(Z2)
pZ <- proj(Z)
Sums.III <- c(t(y)%*%(pZ-pz1)%*%y, t(y)%*%(pZ-pz2)%*%y,Sums.I[3:4],NA)
DF.III <- c(Rank(pZ)-Rank(pz1), Rank(pZ)-Rank(pz2), Rank(pZ)-Rank(p3), Rank(eye)-Rank(p4), NA)
MeanSq.III <- Sums.III/DF.III
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.III <- F_numIII[1:3]/sighat
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
#Now we build the type III anova table.  This means we always test against the full model.
#table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
head(model.matrix(model2))
#Now we build the type III anova table.  This means we always test against the full model.
#table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
Z <- model.matrix(model2)[,c(1,4,7,10,2,5,8,11,3,6,9,12)]
proj(Z)-proj(X)
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
head(model.matrix(model2))
#Now we build the type III anova table.  This means we always test against the full model.
table(data[,c("source","pct")])
model2 = lm(log.conc ~0+source:pct, data = data)
Z <- model.matrix(model2)[,c(1,4,7,10,2,5,8,11,3,6,9,12)]
#Here is a rank 10 matrix to model no source main effects
Z1 <- Z[,c(1:7,9:11)]
#Change rows with soy, 15 and skim 15
Z1[data$source =="soy" & data$pct== 18,]<- c(1,1,1,1,-1,-1,-1,0,0,0)
Z1[data$source =="skim" & data$pct == 18,] <-c(1,1,1,1,0,0,0,-1,-1,-1)
#Here we produce a rank 9 matrix to model no pct main effects
Z2 <- Z[,1:9]
M <- matrix(c(1,-1,0,0,1,-1,0,0,1), nrow = 3, ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct== 12,]<- M
Z2[data$source =="skim" & data$pct == 15,] <-matrix(c(1,0,-1,0,1,0,-1,0,1), nrow = 2,ncol = 9, byrow = TRUE)
Z2[data$source =="skim" & data$pct == 18,] <-matrix(c(1,0,0,-1,1,0,0,-1,1), nrow = 1, ncol = 9, byrow = TRUE)
#View(Z2)
pz1 <- proj(Z1)
pz2 <- proj(Z2)
pZ <- proj(Z)
Sums.III <- c(t(y)%*%(pZ-pz1)%*%y, t(y)%*%(pZ-pz2)%*%y,Sums.I[3:4],NA)
Sums.III
DF.III <- c(Rank(pZ)-Rank(pz1), Rank(pZ)-Rank(pz2), Rank(pZ)-Rank(p3), Rank(eye)-Rank(p4), NA)
MeanSq.III <- Sums.III/DF.III
sighat <-as.numeric((t(y)%*%(eye-p4)%*%y)/(Rank(eye)-Rank(X)))
F_stats.III <- MeanSq.III[1:3]/sighat
F_stats.III <- c(F_stats.III, NA,NA)
p_value.III <- pf(F_stats.III, DF.III, df2 = 29-Rank(X),lower.tail = FALSE)
Type_III <- data.frame(Sources_of_Error,Sums.III, DF.III,F_stats.III,p_value.III)
Type_III
#Since Z is the matrix for the cell means model, we can find an estimate for our parameters
beta <- ginv(t(Z)%*%Z)%*%t(Z)%*%y
beta
#LS mean accross source fish
c1. = c(1,1,1,1,zeros(1,8))/4
t(c1.)%*% beta
#LSM accross soy
c2. = c(zeros(1,4), ones(1,4), zeros(1,4))/4
t(c2.)%*% beta
#LSM accrose source skim
c3. = c(zeros(1,8), ones(1,4))/4
t(c3.)%*%beta
#LS mean accross pct 9
c.1 = rep(c(1,0,0,0),3)/3
t(c.1)%*% beta
#LSM accross pct 12
c.2 = rep(c(0,1,0,0),3)/3
t(c.2)%*% beta
#LSM accross pct 15
c.3 = rep(c(0,0,1,0),3)/3
t(c.3)%*%beta
#LSM accross pct 18
c.4 <- rep(c(0,0,0,1),3)/3
t(c.4)%*% beta
#Here is a simpler model that uses percent as a quantitative variable:
model3 <- lm(log.conc~source +percent + source:percent, data = data)
model.matrix(model3)
anova(model3,model1)
anova(model3,model2)
#Here is a simpler model that uses percent as a quantitative variable:
model3 <- lm(log.conc~source +percent + source:percent, data = data)
model.matrix(model3)
#Here is a simpler model that uses percent as a quantitative variable:
model3 <- lm(log.conc~source +percent + source:percent, data = data)
anova(model3,model2)
summary(model3)
?pigs
0.0006487+0.0210995
3.1164196 -0.0672164
install.packages("curl")
library(pitchRx)
install.packages("RCurl")
library("pitchRx")
sudo apt-get install libcurl4-openssl-dev
library(baseballr)
devtools::install_github(repo = "BillPetti/baseballr")
if (!requireNamespace('pacman', quietly = TRUE)){
install.packages('pacman')
}
pacman::p_load_current_gh("BillPetti/baseballr")
library("baseballr")
library(baseballr)
pacman::p_load_current_gh("BillPetti/baseballr")
install_packages('dplyr')
require('devtools')
install_github("BillPetti/baseballr")
library(pitchRx)
dat <- scrape(start = "2013-06-01", end = "2013-06-01")
setwd("C:/Users/leep/CollegeBaseball")
library(Lahman)
#library(vistime)
library(plyr)
library(MASS)
library(nlme)
library(igraph)
library(lme4)
library(lmerTest)
source("ComparisonsWithMLB/CompFunctions.R")
hitters1 <- read.csv("ComparisonsWithDI/ncaaH.2010-2020_clv1.csv", header = TRUE, sep = ",")
head(hitters1)
summary(hitters1)
hitters2 <- read.csv("ComparisonsWithDI/SummerH.2010-2019_clv1.csv", header = T, sep = ",")
summary(hitters2)
names <- c("playerid", "year", "teamName", "leagueName", "lastName", "firstName", "G", "AB", "R", "H", "Dbl", "Tpl", "HR",
"BB", "IBB", "SO", "SH", "SF", "HBP", "SB", "CS", "Age")
hitters1 = hitters1[,names]
names <- c("playerid", "year", "teamName", "LeagueName", "lastname", "firstname", "G", "AB", "R", "H", "Dbl", "Tpl", "HR",
"BB", "IBB", "SO", "SH", "SF", "HBP", "SB", "CS", "Age")
hitters2 = hitters2[,names]
names <- c("idnumber", "yearID", "teamID", "lgID", "lastname", "firstname", "G", "AB", "R", "H", "X2B", "X3B", "HR",
"BB", "IBB", "SO", "SH", "SF", "HBP", "SB", "CS", "Age")
colnames(hitters1) = names
colnames(hitters2) = names
hitters <- rbind(hitters1,hitters2)
head(hitters)
hitters$playerID <- paste(hitters$lastname, hitters$firstname, hitters$idnumber, sep = ".")
hitters$YR <- hitters$yearID
unique(hitters$lgID)
pwr5 <- c("Big Ten Conference", "Big 12 Conference", "Southeastern Conference", "Atlantic Coast Conference", "Pacific 12 Conference")
summer5 <- c("Alaska Summer League", "Great Lakes Collegiate League", "Coastal Plain Leauge", "Northwoods League", "Cape Cod League")
grp_of5 <- c("American Athletic Conference", "Conference USA", "Mid-American Conference", "Mountain West Conference", "Sun Belt Conference")
hitters <- hitters[hitters$lgID %in% c(pwr5, summer5, grp_of5),]
#hitters$LGYR <- as.factor(paste(hitters$lgID, hitters$yearID, sep = "."))
#hitters.lgyr <- ddply(hitters, .(playerID, LGYR), collapse.season)
#summary(hitters.lgyr)
#Count each season for each hitter
ssns.all <- ddply(hitters, .(playerID), season.tab)
head(ssns.all)
summary(ssns.all)
hitters$experience <- 0
N <- length(hitters$experience)
for (n in 1:N){
plyr <- hitters$playerID[n]
r.ssn <- ssns.all[plyr == ssns.all$playerID, "r.ssn"]
hitters$experience[n] <- hitters$YR[n] - r.ssn + 1
}
